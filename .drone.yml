---
kind: pipeline
type: docker
name: Build Docker Images

steps:
- name: fetch repo
  image: alpine/git
  commands:
    - git fetch --tags

- name: build docker images
  image: plugins/docker
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    DOCKER_USER: jsloan117
    #DOCKER_REPO:
    #  from_secret: docker_repo
    DOCKERFILE: Dockerfile
    IMAGE_NAME: jsloan117/test-ci
  commands:
    - if [ "$DRONE_BRANCH" == "master" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$DRONE_BRANCH; export IMAGE_TAG; fi
    - echo "<<< Building docker images >>>"
    - if [ "$DRONE_BRANCH" == "master" ]; then docker build -f $DOCKERFILE -t $IMAGE_NAME:$IMAGE_TAG .; fi
    - if [ "$DRONE_BRANCH" != "master" ]; then docker build -f $DOCKERFILE -t $IMAGE_NAME:$IMAGE_TAG .; fi

- name: build alternative docker images
  image: plugins/docker
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    DOCKER_USER: jsloan117
    #DOCKER_REPO:
    #  from_secret: docker_repo
    DOCKERFILE: Dockerfile.ubuntu
    IMAGE_NAME: jsloan117/test-ci
  commands:
    - if [ "$DRONE_BRANCH" == "master" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$DRONE_BRANCH; export IMAGE_TAG; fi
    - echo "<<< Building alternative docker images >>>"
    - if [ "$DRONE_BRANCH" == "master" ]; then docker build -f $DOCKERFILE -t $IMAGE_NAME:ubuntu-$IMAGE_TAG .; fi
    - if [ "$DRONE_BRANCH" != "master" ]; then docker build -f $DOCKERFILE -t $IMAGE_NAME:ubuntu-$IMAGE_TAG .; fi

#- name: publish documentation
#  image: plugins/gh-release
#  settings:
#    pages_directory: site/
#  when:
#    branch:
#    - master

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock
