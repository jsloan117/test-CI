version: 2.1

commands:
  set-image-tag:
    description: "Set docker image tag"
    parameters:
      dist:
        type: string
    steps:
      - run:
          name: Set docker image tag
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              TAG_VERSION=latest
            elif [ -n "CIRCLE_PR_NUMBER" ]; then
              TAG_VERSION=${CIRCLE_BRANCH/\//-}
            else
              TAG_VERSION=$CIRCLE_BRANCH
            fi
            if [ "<< parameters.dist >>" = "ubuntu" ]; then TAG_DISTRO=<< parameters.dist >>-circleci-; else TAG_DISTRO="circleci-"; fi
            echo "export IMAGE_TAG=$TAG_DISTRO$TAG_VERSION" >> $BASH_ENV
      - run:
          name: vars
          command: |
            echo ${CIRCLE_PR_NUMBER}
            echo ${CIRCLE_PR_REPONAME}
            echo ${CIRCLE_PR_USERNAME}
            echo ${CIRCLE_PULL_REQUEST}
            echo ${CIRCLE_PULL_REQUESTS}

executors:
  default-executor:
    docker:
      #- image: docker:stable-dind
      - image: circleci/buildpack-deps:bionic
    working_directory: ~/test-CI
    environment:
      IMAGE_NAME: jsloan117/test-ci

jobs:
  build-default-image:
    executor: default-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - set-image-tag:
          dist: alpine
      - run:
          name: build docker image
          command: |
            source $BASH_ENV
            docker build -f Dockerfile -t $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: test image
          command: |
            source $BASH_ENV
            docker run --rm $IMAGE_NAME:$IMAGE_TAG bash --version
      - run:
          name: push image
          command: |
            source $BASH_ENV
            mkdir -p ~/images
            docker save -o ~/images/docker-mkdocs.tar $IMAGE_NAME:$IMAGE_TAG
            if [ "${CIRCLE_BRANCH}" == 'master' ] || [ "${CIRCLE_BRANCH}" == 'dev' ]; then
              echo "I would be logging in and pushing stuff................"
            else
              echo "Not pushing PR's"
              exit 0
            fi
      - persist_to_workspace:
          root: ~/
          paths:
            - images

  build-ubuntu-image:
    executor: default-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - setup_remote_docker:
          version: 18.09.3
      - set-image-tag:
          dist: ubuntu
      - run:
          name: build docker image
          command: |
            source $BASH_ENV
            docker build -f Dockerfile.ubuntu -t $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: test image
          command: |
            source $BASH_ENV
            docker run --rm $IMAGE_NAME:$IMAGE_TAG bash --version
      - run:
          name: push image
          command: |
            source $BASH_ENV
            docker save -o ~/images/docker-mkdocs-ubuntu.tar $IMAGE_NAME:$IMAGE_TAG
            if [ "${CIRCLE_BRANCH}" == 'master' ] || [ "${CIRCLE_BRANCH}" == 'dev' ]; then
              echo "I would be logging in and pushing stuff................"
            else
              echo "Not pushing PR's"
              exit 0
            fi
      - persist_to_workspace:
          root: ~/
          paths:
            - images

  push-images:
    executor: default-executor
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: push images
          command: |
            docker load -i ~/images/docker-mkdocs.tar
            docker load -i ~/images/docker-mkdocs-ubuntu.tar

  build-and-deploy-gh-pages:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: "Set Git name for commits"
          command: git config --global user.name "CircleCI"
      - run:
          name: "Install Mkdocs and Material theme"
          command: pip install --user mkdocs mkdocs-material
      - run:
          name: vars
          command: |
            echo ${CIRCLE_PR_NUMBER}
            echo ${CIRCLE_PR_REPONAME}
            echo ${CIRCLE_PR_USERNAME}
            echo ${CIRCLE_PULL_REQUEST}
            echo ${CIRCLE_PULL_REQUESTS}
      #- add_ssh_keys:
      #    fingerprints:
      #      - a8:ce:61:1e:75:9c:50:ba:28:da:47:f7:ac:bf:8a:d4
      #- run:
      #    name: "Build and push site"
      #    command: mkdocs gh-deploy --message "Deployed {sha} with MkDocs version {version}. [skip ci]"

workflows:
  version: 2
  build-images:
    jobs:
      - build-default-image
#          context: dockerhub
#          filters:
#            branches:
#              only:
#                - master
#                - dev
      - build-ubuntu-image:
          requires:
            - build-default-image
#          context: dockerhub
#          filters:
#            branches:
#              only:
#                - master
#                - dev
      - push-images:
          requires:
            - build-default-image
            - build-ubuntu-image
          filters:
            branches:
              only:
                - master
                - dev
                - fixme
  documentation-update:
    jobs:
      - build-and-deploy-gh-pages:
          filters:
            branches:
              only: dev
