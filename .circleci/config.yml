version: 2.1

commands:
  set-image-tag:
    description: Set image tag
    parameters:
      dist:
        type: string
    steps:
      - run:
          name: Set image tag
          command: |
            if [ $CIRCLE_BRANCH = master ]; then
              TAG_VERSION=latest
            elif [ -n $CIRCLE_PR_NUMBER ]; then
              TAG_VERSION=${CIRCLE_BRANCH/\//-}
            else
              TAG_VERSION=$CIRCLE_BRANCH
            fi
            if [ << parameters.dist >> = ubuntu ]; then TAG_DISTRO=<< parameters.dist >>-circleci-; else TAG_DISTRO=circleci-; fi
            echo "export IMAGE_TAG=$TAG_DISTRO$TAG_VERSION" >> $BASH_ENV

executors:
  default-executor:
    docker:
      - image: circleci/buildpack-deps:bionic
    working_directory: ~/test-CI
    environment:
      IMAGE_NAME: jsloan117/test-ci

jobs:
  build-default-image:
    executor: default-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - set-image-tag:
          dist: alpine
      - run:
          name: build image
          command: |
            source $BASH_ENV
            docker build -f Dockerfile -t $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: test image
          command: |
            source $BASH_ENV
            docker run --rm $IMAGE_NAME:$IMAGE_TAG
      - run:
          name: save image
          command: |
            mkdir -p ~/images
            if [ $CIRCLE_BRANCH = master -o $CIRCLE_BRANCH = dev ]; then
              source $BASH_ENV
              docker save -o ~/images/test-ci.tar $IMAGE_NAME:$IMAGE_TAG
            fi
      - persist_to_workspace:
          root: ~/
          paths:
            - images

  build-ubuntu-image:
    executor: default-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - setup_remote_docker:
          version: 18.09.3
      - set-image-tag:
          dist: ubuntu
      - run:
          name: build image
          command: |
            source $BASH_ENV
            docker build -f Dockerfile.ubuntu -t $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: test image
          command: |
            source $BASH_ENV
            docker run --rm $IMAGE_NAME:$IMAGE_TAG
      - run:
          name: save image
          command: |
            if [ $CIRCLE_BRANCH = master -o $CIRCLE_BRANCH = dev ]; then
              source $BASH_ENV
              docker save -o ~/images/test-ci-ubuntu.tar $IMAGE_NAME:$IMAGE_TAG
            fi
      - persist_to_workspace:
          root: ~/
          paths:
            - images

  push-images:
    executor: default-executor
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: load images
          command: |
            docker load -qi ~/images/test-ci.tar
            docker load -qi ~/images/test-ci-ubuntu.tar
      #- run:
      #    name: Login to Docker Hub
      #    command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
      #- run:
      #    name: Push image
      #    command: docker push $IMAGE_NAME:$IMAGE_TAG

  build-and-deploy-documentation:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Set Git name for commits
          command: git config --global user.name 'CircleCI'
      - run:
          name: Install Mkdocs and Material theme
          command: pip -q install --user mkdocs mkdocs-material pygments
      - add_ssh_keys:
          fingerprints:
            - a8:ce:61:1e:75:9c:50:ba:28:da:47:f7:ac:bf:8a:d4
      - run:
          name: Build and push documentation
          command: mkdocs gh-deploy -cm "Deployed {sha} with MkDocs version {version}. [skip ci]" --force

workflows:
  version: 2
  build-images:
    jobs:
      - build-default-image
      - build-ubuntu-image:
          requires:
            - build-default-image
      - push-images:
          requires:
            - build-ubuntu-image
          context: dockerhub
          filters:
            branches:
              only:
                - master
                - dev
  documentation-update:
    jobs:
      - build-and-deploy-documentation:
          filters:
            branches:
              only: master
