---
name: Build Docker Images

on:
  push:
    branches:
      - dev
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        if: github.event_name != 'pull_request'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        if: github.event_name != 'pull_request'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: jsloan117/test-ci
          tag-sha: false
          tag-semver: |
            {{version}}

      # - name: Set latest image tag
      #   if: github.ref == 'refs/heads/master'
      #   run: echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      # - name: Set non-latest image tag
      #   if: github.ref != 'refs/heads/master'
      #   run: IMAGE_TAG=$(echo $GITHUB_REF | cut -d'/' -f3) >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          username: jsloan117
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Alpine
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Build and push Ubuntu
        id: docker_build_ubuntu
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile.ubuntu
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}-ubuntu
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Image digest
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
          echo ${{ steps.docker_build_ubuntu.outputs.digest }}
