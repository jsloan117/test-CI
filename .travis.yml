language: minimal
#services: docker
dist: bionic

env:
  global:
    - IMAGE_NAME=jsloan117/test-ci
    - CI_PLATFORM=travisci

jobs:
  include:
    - stage: build docker images
      services: docker
      name: build base image
      script: |
        echo 'This is script one at work'
      name: build ubuntu image
    - script: |
        echo 'This is script two at work'
    #- stage: build docker image
    #  script: |
    #    printf '\n<<< Building docker image >>>\n\n'
    #    if [ $TRAVIS_BRANCH = master ]; then IMAGE_TAG=latest; else IMAGE_TAG=$TRAVIS_BRANCH; export IMAGE_TAG; fi
    #    docker build -f Dockerfile -t $IMAGE_NAME:$CI_PLATFORM-$IMAGE_TAG .
    #    printf '\n<<< Testing image >>>\n\n'
    #    docker run --rm $IMAGE_NAME:$CI_PLATFORM-$IMAGE_TAG bash --version
    #    if [ $TRAVIS_PULL_REQUEST = false ] && [ $TRAVIS_BRANCH = master -o $TRAVIS_BRANCH = dev ]; then
    #      printf '\nI would be logging in and pushing stuff................\n\n'
    #      #echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
    #      #docker push $IMAGE_NAME:$IMAGE_TAG
    #    fi

    #- stage: build ubuntu docker image
    #  script: |
    #    printf '\n<<< Building docker image >>>\n\n'
    #    if [ $TRAVIS_BRANCH = master ]; then IMAGE_TAG=latest; else IMAGE_TAG=$TRAVIS_BRANCH; export IMAGE_TAG; fi
    #    docker build -f Dockerfile.ubuntu -t $IMAGE_NAME:ubuntu-$CI_PLATFORM-$IMAGE_TAG .
    #    printf '\n<<< Testing image >>>\n\n'
    #    docker run --rm $IMAGE_NAME:ubuntu-$CI_PLATFORM-$IMAGE_TAG bash --version
    #    if [ $TRAVIS_PULL_REQUEST = false ] && [ $TRAVIS_BRANCH = master -o $TRAVIS_BRANCH = dev ]; then
    #      printf '\nI would be logging in and pushing stuff................\n\n'
    #      #echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
    #      #docker push $IMAGE_NAME:$IMAGE_TAG
    #    fi

    - stage: build documentation
      if: branch = master
      language: python
      python: 3.7.5
      cache: pip
      script: |
        mkdir -p "$HOME/.ssh"
        echo "$DEPLOY_KEY" | base64 --decode > "$HOME/.ssh/id_rsa"
        chmod 600 "$HOME/.ssh/id_rsa"
        git remote set-url origin git@github.com:jsloan117/test-CI.git
        git config --global user.name 'TravisCI'
        pip3 install mkdocs mkdocs-material pygments
        echo ''
        mkdocs build -cs
        #mkdocs gh-deploy -cm "Deployed {sha} with MkDocs version {version}. [skip ci]" --force
        echo ''
        rm -f "$HOME/.ssh/id_rsa"
