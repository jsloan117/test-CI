# Azure DevOps Build Pipeline for test-CI container
# Trying to prevent all the docker labels ADO likes to inject into the images
# DEBUG: Not sure wth its doing with vars atm....

name: $(BuildDefinitionName)-$(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

variables:
  system.debug: true
  CI_PLATFORM: azure-pipelines
  IMAGE_NAME: jsloan117/test-ci
  ADO_BRANCH: $(BUILD_SOURCEBRANCHNAME)

schedules:
  - cron: '0 0 * * 6'
    displayName: 'Weekly build at midnight'
    branches:
      include:
        - '*'
    always: true

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Docker@2
    displayName: docker login
    inputs:
      containerRegistry: 'Docker Hub'
      command: login
    enabled: false

  - task: Bash@3
    displayName: install latest version of docker
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        sudo apt-get update
        sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update && sudo apt-get -y install docker-ce docker-ce-cli containerd.io
        sudo systemctl enable --now docker.service
    enabled: true

  - task: Bash@3
    displayName: get environment info
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        env
        docker --version
        printf "\n\n\n"
        docker info
    enabled: false

  - task: Bash@3
    displayName: set environmental variables image tag
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        printf '\n<<< Setting image name & tag format >>>\n'
        ADO_BRANCH=$BUILD_SOURCEBRANCHNAME
        #CI_PLATFORM=azure-pipelines
        if [ "$ADO_BRANCH" == "master" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$ADO_BRANCH; fi
        #IMAGE_NAME=jsloan117/test-ci
        printf "\n$ADO_BRANCH\n$IMAGE_NAME\n$IMAGE_TAG\n$CI_PLATFORM\n"
        export ADO_BRANCH IMAGE_TAG IMAGE_NAME CI_PLATFORM
    enabled: true

  - task: Bash@3
    displayName: build docker images
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        printf '\n<<< building images >>>\n\n'
        if [ "$BUILD_SOURCEBRANCHNAME" == "master" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$BUILD_SOURCEBRANCHNAME; fi
        printf "\n$ADO_BRANCH\n$IMAGE_NAME\n$IMAGE_TAG\n$CI_PLATFORM\n$BUILD_SOURCEBRANCHNAME\n"
        sudo docker build -f Dockerfile -t "$IMAGE_NAME:$CI_PLATFORM-$IMAGE_TAG" .
    enabled: true

  - task: Bash@3
    displayName: build ubuntu docker images
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        printf '\n<<< building ubuntu images >>>\n\n'
        if [ "$BUILD_SOURCEBRANCHNAME" == "master" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$BUILD_SOURCEBRANCHNAME; fi
        printf "\n$ADO_BRANCH\n$IMAGE_NAME\n$IMAGE_TAG\n$CI_PLATFORM\n$BUILD_SOURCEBRANCHNAME\n"
        sudo docker build -f Dockerfile.ubuntu -t "$IMAGE_NAME:ubuntu-$CI_PLATFORM-$IMAGE_TAG" .
    enabled: true

  - task: Bash@3
    displayName: inspect image labels
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        printf '\n<<< inspecting images >>>\n\n'
        for img in $(sudo docker images | awk '{OFS = ":";} {print $1,$2}' | tail -n+2 | head -n2); do 
          sudo docker image inspect -f '{{json .Config.Labels}}' "${img}"; printf '\n\n'; 
        done
    enabled: true

  - task: Bash@3
    displayName: pull request review
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    inputs:
      targetType: inline
      script: |
        printf '\n<<< Do stuff because of a PR >>>\n\n'
    enabled: true

  - task: Docker@2
    displayName: docker logout
    inputs:
      containerRegistry: 'Docker Hub'
      command: logout
    enabled: false
