# Azure DevOps Build Pipeline for test-CI container
# Trying to prevent all the docker labels ADO likes to inject into the images

name: $(BuildDefinitionName)-$(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

variables:
- name: system.debug
  value: true
- name: ADO_BRANCH
  value: $(BUILD_SOURCEBRANCHNAME)
- name: IMAGE_NAME
  value: jsloan117/test-ci

schedules:
  - cron: '0 0 * * 6'
    displayName: 'Weekly build at midnight'
    branches:
      include:
        - '*'
    always: true

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Docker@2
    displayName: Docker Login
    inputs:
      containerRegistry: 'Docker Hub'
      command: login
    enabled: true

  - task: Bash@3
    displayName: Install latest version of Docker
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        sudo apt-get update
        sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt-get update && sudo apt-get -y install docker-ce docker-ce-cli containerd.io
        sudo systemctl enable --now docker.service
    enabled: true

  - task: Bash@3
    displayName: Get environment info
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        env
        docker --version
        echo -e "\n\n\n"
        docker info
    enabled: false

  - task: Bash@3
    displayName: Set image tag
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        echo -e '\n<<< Setting docker image tag format >>>\n'
        #ADO_BRANCH=$BUILD_SOURCEBRANCHNAME
        if [ "$ADO_BRANCH" == "master" ]; then IMAGE_TAG=latest; else IMAGE_TAG=$ADO_BRANCH; export IMAGE_TAG fi
        #echo $IMAGE_TAG; export IMAGE_TAG
        #IMAGE_NAME='jsloan117/test-ci'
        echo -e "\n$ADO_BRANCH\n$IMAGE_NAME\n$IMAGE_TAG\n"
        #export IMAGE_TAG IMAGE_NAME
    enabled: true

  - task: Bash@3
    displayName: Build docker images
    condition: succeeded()
    env:
      DOCKERFILE: Dockerfile
    inputs:
      targetType: inline
      script: |
        echo -e '\n<<< Building docker images >>>\n'
        echo -e "\n$ADO_BRANCH\n$IMAGE_NAME\n$IMAGE_TAG\n"
        sudo docker build -f $DOCKERFILE -t $IMAGE_NAME:$IMAGE_TAG .
    enabled: true

  - task: Bash@3
    displayName: Build ubuntu docker images
    condition: succeeded()
    env:
      DOCKERFILE: Dockerfile.ubuntu
      DIST: ubuntu
    inputs:
      targetType: inline
      script: |
        echo -e '\n<<< Building ubuntu docker images >>>\n'
        echo -e "\n$ADO_BRANCH\n$IMAGE_NAME\n$IMAGE_TAG\n"
        sudo docker build -f $DOCKERFILE -t $IMAGE_NAME:$DIST-$IMAGE_TAG .
    enabled: true

  - task: Bash@3
    displayName: Inspect images
    condition: succeeded()
    inputs:
      targetType: inline
      script: |
        echo -e '\n<<< Building docker images >>>\n'
        for x in $(docker images | awk '{print $1}' | tail -n+2); do sudo docker image inspect -f '{{json .Config.Labels}}' $x; done
    enabled: true

  - task: Bash@3
    displayName: Pull request review
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    inputs:
      targetType: inline
      script: |
        echo -e '\n<<< Do stuff because of a PR >>>\n'
    enabled: true

  - task: Docker@2
    displayName: Docker Logout
    inputs:
      containerRegistry: 'Docker Hub'
      command: logout
    enabled: true
