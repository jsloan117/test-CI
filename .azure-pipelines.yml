# Azure DevOps Build Pipeline for Hackmyresume Docker container

schedules:
  - cron: '0 0 * * 6'
    displayName: 'Weekly build at midnight'
    branches:
      include:
        - '*'
    always: true

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Docker@2
    displayName: Login
    inputs:
      containerRegistry: 'Docker Hub'
      command: login
    enabled: true

  - task: Docker@2
    displayName: 'Build Alpine Image dev'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(repo)'
      command: build
      Dockerfile: Dockerfile
      tags: |
        $(Build.BuildId)
        $(Build.SourceBranchName)
    enabled: true
  - task: Docker@2
    displayName: 'Build Ubuntu Image dev'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(repo)'
      command: build
      Dockerfile: Dockerfile.ubuntu
      tags: |
        $(Build.BuildId)
        ubuntu-$(Build.SourceBranchName)
    env:
      DEBIAN_FRONTEND: noninteractive
    enabled: true

  - task: Docker@2
    displayName: 'Push Alpine Image dev'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(repo)'
      command: push
      tags: '$(Build.SourceBranchName)'
    enabled: true
  - task: Docker@2
    displayName: 'Push Ubuntu Image dev'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(repo)'
      command: push
      tags: 'ubuntu-$(Build.SourceBranchName)'
    enabled: true

  - task: Docker@2
    displayName: 'Build Alpine Image latest'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(repo)'
      command: build
      Dockerfile: Dockerfile
      tags: |
        latest
        $(Build.BuildId)
        $(Build.SourceBranchName)
    enabled: true
  - task: Docker@2
    displayName: 'Build Ubuntu Image latest'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      containerRegistry: 'Docker Hub'
      repository: '$(repo)'
      command: build
      Dockerfile: Dockerfile.ubuntu
      tags: |
        ubuntu-latest
        $(Build.BuildId)
        ubuntu-$(Build.SourceBranchName)
    env:
      DEBIAN_FRONTEND: noninteractive
    enabled: true

  - task: Docker@2
    displayName: Logout
    inputs:
      containerRegistry: 'Docker Hub'
      command: logout
    enabled: true
